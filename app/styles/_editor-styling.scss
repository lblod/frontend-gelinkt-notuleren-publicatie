

@mixin say-content() {
  // Set base font size for elements
  &,
  ul,
  ol,
  div {
    @include au-font-size($au-base);
    font-family: var(--au-font);
    font-weight: var(--au-regular);
  }

  span,
  a {
    font-size: inherit;
  }

  [data-mark~="color"]::selection {
    color: inherit;
  }

  h1,
  .h1 {
    @include au-font-size($au-h1, 1.1);
    font-family: var(--au-font);
    font-weight: var(--au-medium);
  }

  h2,
  .h2 {
    @include au-font-size($au-h2, 1.3);
    font-family: $au-font;
    font-weight: $au-medium;
  }

  h3,
  .h3 {
    @include au-font-size($au-h3, 1.3);
    font-family: $au-font;
    font-weight: $au-medium;
  }

  h4,
  .h4 {
    @include au-font-size($au-h4);
    font-family: $au-font;
    font-weight: $au-medium;
  }

  h5,
  .h5 {
    @include au-font-size($au-h5);
    font-family: $au-font;
    font-weight: $au-medium;
  }

  h6,
  .h6 {
    @include au-font-size($au-h6);
    font-family: $au-font;
    font-weight: $au-medium;
  }

  p,
  li {
    &.small {
      @include au-font-size($au-base);
    }

    &.smaller {
      @include au-font-size(1.4rem, 1.5);
    }

    &.smallest {
      @include au-font-size(1.2rem, 1.5);
    }
  }



  // Setup some margin rules
  p + *,
  div + *,
  span + *,
  ul + *,
  ol + *,
  i + *,
  table + * {
    margin-top: $au-unit-small;
  }

  [data-indentation-level='1'] {
    margin-left: 3rem;
  }

  [data-indentation-level='2'] {
    margin-left: 6rem;
  }

  [data-indentation-level='3'] {
    margin-left: 9rem;
  }

  [data-indentation-level='4'] {
    margin-left: 12rem;
  }

  li > {
    [data-indentation-level] {
      margin-left: 0;
    }
  }


  // No margin
  li p + *,
  p * + *,
  p + br,
  div + br,
  span + br,
  ul + br,
  ol + br,
  i + br,
  br + br {
    margin-top: 0;
  }

  h1,
  .h1 {
    margin-top: $au-unit-small * 2;
    margin-bottom: $au-unit-small * 2;
  }

  h2,
  .h2,
  h3,
  .h3,
  h4,
  .h4,
  h5,
  .h5,
  h6 {
    margin-top: $au-unit-small * 2;
    margin-bottom: $au-unit-small;
  }

  // Style links
  a {
    transition: color var(--au-transition), text-decoration var(--au-transition);
    font-weight: var(--au-regular);
    text-decoration-color: var(--au-blue-300);

    &,
    &:visited {
      color: var(--au-blue-700);
    }

    &:hover,
    &:focus {
      color: var(--au-blue-600);
      text-decoration-color: var(--au-blue-300);
    }

    &:focus {
      outline: var(--au-outline);
      outline-offset: $au-unit-tiny * 0.5;
    }
  }


  ul, ol {
    padding-left: 3rem;
  }

  // Style lists
  ul,
  ul.bullet-list {
    list-style-type: initial;

    // Stop indenting
    ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul {
      margin-left: 0;
      padding-left: 0;
    }
  }

  ol,
  ol.numbered-list {
    list-style-type: decimal;

    & > li > ol:not([data-list-style]) {
      list-style-type: inherit;
    }

    &[data-list-style='decimal'] {
      list-style-type: decimal;
    }

    &[data-list-style='upper-roman'] {
      list-style-type: upper-roman;
    }

    &[data-list-style='lower-alpha'] {
      list-style-type: lower-alpha;
    }

    // Stop indenting
    ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol ol {
      margin-left: 0;
      padding-left: 0;
    }
  }

  ol > li[data-list-marker]::marker {
    content: attr(data-list-marker);
    font-variant-numeric: tabular-nums;
  }

  ol > *[data-content-container] > li[data-list-marker]::marker {
    content: attr(data-list-marker);
    font-variant-numeric: tabular-nums;
  }

  ul.article-list {
    padding-left: 0;

    li {
      margin-bottom: 1.5rem;
      list-style-type: unset;
    }
  }

  ul > li {
    > ul > li {
      list-style-type: circle;
    }

    > ul ul > li {
      list-style-type: square;
    }

    > ul ul ul > li {
      list-style-type: initial;
    }

    > ul ul ul ul > li {
      list-style-type: circle;
    }

    > ul ul ul ul ul > li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul > li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul > li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul > li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul > li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: square;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: initial;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: circle;
    }

    > ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul ul > li {
      list-style-type: square;
    }
  }

  // Style horizontal rule
  hr {
    margin: 0;
    margin-top: $au-unit;
    margin-bottom: $au-unit;
    border: 0;
    border-bottom: 3px solid var(--au-gray-200);
  }

  // Add custom font styling
  strong,
  b {
    font-weight: var(--au-bold);
  }

  em {
    font-style: italic;
  }

  i {
    display: inline-block;
  }

  sub {
    vertical-align: sub;
    font-size: smaller;
  }

  sup {
    vertical-align: super;
    font-size: smaller;
  }

  // Table styling
  table th {
    background-color: var(--au-white);
  }

  .data-table th,
  .data-table td {
    @include au-font-size($au-base, 1.5);
  }

  .data-table--lined.data-table--tight {
    th,
    td {
      font-size: 1.4rem;
      padding: 0.8rem;
    }

    .button--small {
      font-size: 1.3rem;
      font-weight: 400;
    }

    .button-group .button {
      margin-bottom: 0.5rem;
    }
  }


  // Don't show certain properties
  [property='besluit:gebeurtNa'],
  [property='besluit:aangebrachtNa'],
  [property='eli:language'],
  [typeof='ext:TasklistData'],
  [class='ext_scroll_to'],
  [property='ext:variableState'],
  [property='ext:idInSnippet'],
  [property='ext:intentionUri'],
  [typeof='ext:Variable'],
  [property='ext:metadata'] {
    display: none !important;
  }

  // Structures
  [property="say:hasPart"] + [property="say:hasPart"] {
    margin-top: $au-unit-small;
  }

  [property="say:hasPart"] [property="say:hasPart"],
  [property="say:hasPart"] [property="eli:has_part"] {
    margin-left: $au-unit-tiny;
  }

  [typeof="besluit:Artikel"] >[property='say:heading'],
  [typeof="say:Article"] >[property='say:heading'] {
    font-weight: var(--au-medium);
  }
}
